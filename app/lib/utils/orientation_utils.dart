/// üì± Orientation Utilities
///
/// Utility class ƒë·ªÉ qu·∫£n l√Ω orientation c·ªßa app
/// Cung c·∫•p c√°c method ƒë·ªÉ lock/unlock orientation modes

import 'package:flutter/services.dart';

class OrientationUtils {
  /// Lock app ·ªü portrait mode (d·ªçc)
  static Future<void> lockPortrait() async {
    await SystemChrome.setPreferredOrientations([
      DeviceOrientation.portraitUp,
      DeviceOrientation.portraitDown,
    ]);
  }

  /// Lock app ·ªü landscape mode (ngang)
  static Future<void> lockLandscape() async {
    await SystemChrome.setPreferredOrientations([
      DeviceOrientation.landscapeLeft,
      DeviceOrientation.landscapeRight,
    ]);
  }

  /// Lock app ch·ªâ ·ªü portrait up (kh√¥ng cho ph√©p l·ªôn ng∆∞·ª£c)
  static Future<void> lockPortraitUp() async {
    await SystemChrome.setPreferredOrientations([
      DeviceOrientation.portraitUp,
    ]);
  }

  /// Unlock t·∫•t c·∫£ orientations
  static Future<void> unlockAll() async {
    await SystemChrome.setPreferredOrientations([
      DeviceOrientation.portraitUp,
      DeviceOrientation.portraitDown,
      DeviceOrientation.landscapeLeft,
      DeviceOrientation.landscapeRight,
    ]);
  }

  /// Reset v·ªÅ default portrait mode
  static Future<void> resetToPortrait() async {
    await lockPortrait();
  }
}
